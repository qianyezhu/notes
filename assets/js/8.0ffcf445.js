(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{148:function(t,s,a){"use strict";a.r(s);var i=a(0),e=Object(i.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h3",{attrs:{id:"git使用入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git使用入门"}},[t._v("#")]),t._v(" git使用入门")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第一步：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、克隆")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/qianyezhu/hello-world.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、添加远程地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:yourName/yourRepo.git  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第二步：新加文件")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试文本"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ceshi.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第三步：查看状态")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第四步：将该文件加入缓冲区")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" ceshi.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#第五步： 使用git commit -m "This is my first commit via Git!"来提交修改，-m后面所带的参数是本次提交信息，一般用来记录本次提交的主要意图。')]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ceshi"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第六步：上传")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master（将本地的master分支推送到origin主机，同时指定origin为默认主机）\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#备注：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如出现上传不成功等情况，可以通过如下命令进行代码合并【注：pull=fetch+merge]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase origin master\n")])])]),a("h3",{attrs:{id:"git-pull-后恢复到原来版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-后恢复到原来版本"}},[t._v("#")]),t._v(" Git pull 后恢复到原来版本")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git reflog master")]),t._v("  //(查看本地master分支历史变动纪录)\n"),a("img",{attrs:{src:t.$withBase("/images/git/stickpicture.png"),alt:"mixureSecure"}})]),t._v(" "),a("li",[a("code",[t._v("git reset --hard <COMMIT_ID>")]),t._v(" //（恢复到之前位置）"),a("br"),t._v(" "),a("code",[t._v("git reset --hard master@{1}")])])]),t._v(" "),a("h3",{attrs:{id:"删除push到服务器上的commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除push到服务器上的commit"}},[t._v("#")]),t._v(" 删除push到服务器上的commit")]),t._v(" "),a("p",[t._v("使用两条指令："),a("br"),t._v(" "),a("code",[t._v("git reset --hard <commit_id>")]),a("br"),t._v(" "),a("code",[t._v("git push origin HEAD --force")]),a("br"),t._v("\n其中commit_id是你想回到的commit的id（即想删除的commit的前一个commit），可以在github.com的commit中查看。")]),t._v(" "),a("h3",{attrs:{id:"git设置仓库代理及取消"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git设置仓库代理及取消"}},[t._v("#")]),t._v(" git设置仓库代理及取消")]),t._v(" "),a("p",[t._v("1.设置Git代理"),a("br"),t._v(" "),a("code",[t._v("git config --global http.proxy http://127.0.0.0")]),t._v("\n2.取消Git全局代理"),a("br"),t._v(" "),a("code",[t._v("git config --global --unset http.proxy")]),t._v("\n3. 进入到 项目目录 执行 项目级别的代理"),a("br"),t._v(" "),a("code",[t._v("git config http.proxy http://127.0.0.0")])]),t._v(" "),a("h3",{attrs:{id:"删除git用户凭证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除git用户凭证"}},[t._v("#")]),t._v(" 删除git用户凭证")]),t._v(" "),a("p",[t._v("控制面板→用户管理→管理用户凭证→window凭证")]),t._v(" "),a("h3",{attrs:{id:"常用git-stash命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用git-stash命令"}},[t._v("#")]),t._v(" 常用git stash命令")]),t._v(" "),a("ol",[a("li",[a("code",[t._v('git stash save "save message"')]),t._v("  : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。")]),t._v(" "),a("li",[a("code",[t._v("git stash list")]),t._v("  ：查看stash了哪些存储")]),t._v(" "),a("li",[a("code",[t._v("git stash show")]),t._v(" ：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}")]),t._v(" "),a("li",[a("code",[t._v("git stash show -p")]),t._v(" : 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show  stash@{$num}  -p ，比如第二个：git stash show  stash@{1}  -p")]),t._v(" "),a("li",[a("code",[t._v("git stash apply")]),t._v(" :应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，git stash apply stash@{$num} ， 比如第二个： "),a("code",[t._v("git stash apply stash@{1}")])]),t._v(" "),a("li",[a("code",[t._v("git stash pop")]),t._v(" ：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令："),a("code",[t._v("git stash pop stash@{$num}")]),t._v(" ，比如应用并删除第二个：git stash pop stash@{1}")]),t._v(" "),a("li",[a("code",[t._v("git stash drop stash@{$num}")]),t._v(" ：丢弃stash@{$num}存储，从列表中删除这个存储")]),t._v(" "),a("li",[a("code",[t._v("git stash clear")]),t._v(" ：删除所有缓存的stash")])]),t._v(" "),a("h3",{attrs:{id:"git添加tag标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git添加tag标签"}},[t._v("#")]),t._v(" git添加tag标签")]),t._v(" "),a("pre",[a("code",[t._v("备注生产环境标签：标签规范：v1.0.0.2018122401\n创建标签：\t\tgit tag -a V1.2 -m 'WebSite version 1.2'\n查看标签：\t\tgit tag\n显示附注信息：\t\tgit show V1.2\n同步到远程代码库:\tgit push origin --tags\n删除标签:\t\tgit tag -d V1.2\n删除线上版本标签：\tgit push origin :refs/tags/V1.2\n获取远程版本标签:\tgit fetch origin tag V1.2\n")])])])}),[],!1,null,null,null);s.default=e.exports}}]);